OLD:
1. review the pull request qi->master, get the homework from homework.txt
2. simulate the game 50 times from gergo branch
    count how many times the money of qi exceeds 100/below 100 after playing 50 times.
    count how many times the money of gergo exceeds 100/below 100 after playing 50 times.
   write a function to do this.
3. there is a bug when we play too many games (fails)
    try to figure out why and fix it.


9/15/2020:
1. merge master to gergo
2. To be able to adjust the amount of bets during the game, the
    make_bet()
   function in player.py should take another input, which is the current_score
   of the deck being played.
   You can use a simple step function as follows:
   if current_score > 5:
       make a bet of 20 bucks instead of 10
   if current_score > 15:
       make a bet of 40 bucks instead of 10
   otherwise, do normal 10
3. Run the simulation and report the money after 50 games
	with and without the strategy

9/22/2020:
1. Test stategies:
    a) stop lvl (16, 17, 18) : simulate 3 players at the same time
    b) self.multi (X - axis) : np.linspace(starting, ending, # points)
                             : np.linspace(1, 5, 10)
   for every player and every self.multi:
   calculate the total amount of money change after 10 casino visits (n_simuls)
   and plot it against the self.multi
   X - axis: the bet increasing ratio (self.multi)
   y - axis: the total money change after 10 casino visits
   3 lines/legends: 3 different players

   generate the figure into result/, following whats been done in make_plot.py

   
